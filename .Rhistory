substr(smp, 1, 3)
regexpr("Level of Analysis", smp)
regexpr("Level of Analysis", smp)
regexpr("Level of Analysis", smp)[1]
regexpr("Level of Analysis", smp)[2]
regexpr("Level of Analysis", smp)+1
substr(smp, 1, regexpr("Level of Analysis", smp))
substr(smp, 1, regexpr("Level of Analysis", smp)-1)
substr(smp, regexpr("Level of Analysis", smp), regexpr("Level of Analysis", smp)-1)
cat(smp)
substr(smp, regexpr("Level of Analysis", smp), regexpr("Projection/Actual", smp)-1)
length("Level")
substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
substr(smp, 1, regexpr("Level of Analysis", smp)-1)
substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
substr(smp, 1, regexpr("Level of Analysis", smp)-1)
substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
cat(smp)
substr(smp, regexpr("Data Inputs Required:", smp)+nchar("Data Inputs Required:"), regexpr("http", smp)-1)
substr(smp, 1, regexpr("Level of Analysis", smp)-1)
substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
substr(smp, regexpr("Projection/Actual", smp)+nchar("Projection/Actual"), regexpr("Impact Type", smp)-1)
substr(smp, regexpr("Impact Type", smp)+nchar("Impact Type"), regexpr("Complexity", smp)-1)
substr(smp, regexpr("Complexity", smp)+nchar("Complexity"), regexpr("Cost", smp)-1)
substr(smp, regexpr("Cost", smp)+nchar("Cost"), regexpr("Comparability", smp)-1)
substr(smp, regexpr("Comparability", smp)+nchar("Comparability"), regexpr("DEVELOPER:", smp)-1)
substr(smp, regexpr("DEVELOPER:", smp)+nchar("DEVELOPER:"), regexpr("Extractive Company Use:", smp)-1)
substr(smp, regexpr("Extractive Company Use:", smp)+nchar("Extractive Company Use:"), regexpr("Data Inputs Required:", smp)-1)
substr(smp, regexpr("Data Inputs Required:", smp)+nchar("Data Inputs Required:"), regexpr("http", smp)-1)
z[1]
z[[1]]
length(z[[1]])
for(i in 1:length(z[[1]])) {
smp <- z[[1]][i]
substr(smp, 1, regexpr("Level of Analysis", smp)-1)
substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
substr(smp, regexpr("Projection/Actual", smp)+nchar("Projection/Actual"), regexpr("Impact Type", smp)-1)
substr(smp, regexpr("Impact Type", smp)+nchar("Impact Type"), regexpr("Complexity", smp)-1)
substr(smp, regexpr("Complexity", smp)+nchar("Complexity"), regexpr("Cost", smp)-1)
substr(smp, regexpr("Cost", smp)+nchar("Cost"), regexpr("Comparability", smp)-1)
substr(smp, regexpr("Comparability", smp)+nchar("Comparability"), regexpr("DEVELOPER:", smp)-1)
substr(smp, regexpr("DEVELOPER:", smp)+nchar("DEVELOPER:"), regexpr("Extractive Company Use:", smp)-1)
substr(smp, regexpr("Extractive Company Use:", smp)+nchar("Extractive Company Use:"), regexpr("Data Inputs Required:", smp)-1)
substr(smp, regexpr("Data Inputs Required:", smp)+nchar("Data Inputs Required:"), regexpr("http", smp)-1)
}
for(i in 1:length(z[[1]])) {
smp <- z[[1]][i]
substr(smp, 1, regexpr("Level of Analysis", smp)-1)
substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
substr(smp, regexpr("Projection/Actual", smp)+nchar("Projection/Actual"), regexpr("Impact Type", smp)-1)
substr(smp, regexpr("Impact Type", smp)+nchar("Impact Type"), regexpr("Complexity", smp)-1)
substr(smp, regexpr("Complexity", smp)+nchar("Complexity"), regexpr("Cost", smp)-1)
substr(smp, regexpr("Cost", smp)+nchar("Cost"), regexpr("Comparability", smp)-1)
substr(smp, regexpr("Comparability", smp)+nchar("Comparability"), regexpr("DEVELOPER:", smp)-1)
substr(smp, regexpr("DEVELOPER:", smp)+nchar("DEVELOPER:"), regexpr("Extractive Company Use:", smp)-1)
substr(smp, regexpr("Extractive Company Use:", smp)+nchar("Extractive Company Use:"), regexpr("Data Inputs Required:", smp)-1)
substr(smp, regexpr("Data Inputs Required:", smp)+nchar("Data Inputs Required:"), regexpr("http", smp)-1)
}
rm(smp)
df <- data.table(a1,a2)
library(data.table)
df <- data.table(a1,a2)
df <- data.table(a1=NA,a2=NA)
df <- data.table(a1=NA,a2=NA, a3=NA,a4=NA,a5=NA,a6=NA,a7=NA,a8=NA,a9=NA,a10=NA)
df
df <- data.table(a1=NA,a2=NA, a3=NA,a4=NA,a5=NA,a6=NA,a7=NA,a8=NA,a9=NA,a10=NA)
for(i in 1:length(z[[1]])) {
smp <- z[[1]][i]
a1 <- substr(smp, 1, regexpr("Level of Analysis", smp)-1)
a2 <- substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
a3 <- substr(smp, regexpr("Projection/Actual", smp)+nchar("Projection/Actual"), regexpr("Impact Type", smp)-1)
a4 <- substr(smp, regexpr("Impact Type", smp)+nchar("Impact Type"), regexpr("Complexity", smp)-1)
a5 <- substr(smp, regexpr("Complexity", smp)+nchar("Complexity"), regexpr("Cost", smp)-1)
a6 <- substr(smp, regexpr("Cost", smp)+nchar("Cost"), regexpr("Comparability", smp)-1)
a7 <- substr(smp, regexpr("Comparability", smp)+nchar("Comparability"), regexpr("DEVELOPER:", smp)-1)
a8 <- substr(smp, regexpr("DEVELOPER:", smp)+nchar("DEVELOPER:"), regexpr("Extractive Company Use:", smp)-1)
a9 <- substr(smp, regexpr("Extractive Company Use:", smp)+nchar("Extractive Company Use:"), regexpr("Data Inputs Required:", smp)-1)
a10 <- substr(smp, regexpr("Data Inputs Required:", smp)+nchar("Data Inputs Required:"), regexpr("http", smp)-1)
temp <- data.table(a1=a1,a2=a2, a3=a3,a4=a4,a5=a5,a6=a6,a7=a7,a8=a8,a9=a9,a10=a10)
df <- rbind(df, temp)
}
View(df)
i<2
i<-2
smp <- z[[1]][i]
smp
a1 <- substr(smp, 1, regexpr("Level of Analysis", smp)-1)
a2 <- substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
a3 <- substr(smp, regexpr("Projection/Actual", smp)+nchar("Projection/Actual"), regexpr("Impact Type", smp)-1)
a4 <- substr(smp, regexpr("Impact Type", smp)+nchar("Impact Type"), regexpr("Complexity", smp)-1)
a5 <- substr(smp, regexpr("Complexity", smp)+nchar("Complexity"), regexpr("Cost", smp)-1)
a6 <- substr(smp, regexpr("Cost", smp)+nchar("Cost"), regexpr("Comparability", smp)-1)
a7 <- substr(smp, regexpr("Comparability", smp)+nchar("Comparability"), regexpr("DEVELOPER:", smp)-1)
a8 <- substr(smp, regexpr("DEVELOPER:", smp)+nchar("DEVELOPER:"), regexpr("Extractive Company Use:", smp)-1)
a9 <- substr(smp, regexpr("Extractive Company Use:", smp)+nchar("Extractive Company Use:"), regexpr("Data Inputs Required:", smp)-1)
a10 <- substr(smp, regexpr("Data Inputs Required:", smp)+nchar("Data Inputs Required:"), regexpr("http", smp)-1)
cat(smp)
df <- data.table(a1=NA,a2=NA, a3=NA,a4=NA,a5=NA,a6=NA,a7=NA,a8=NA,a9=NA,a10=NA)
rm(smp)
rm(i)
for(i in 1:length(z[[1]])) {
smp <- z[[1]][i]
a1 <- substr(smp, 1, regexpr("Level of Analysis", smp)-1)
a2 <- substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
a3 <- substr(smp, regexpr("Projection/Actual", smp)+nchar("Projection/Actual"), regexpr("Impact Type", smp)-1)
a4 <- substr(smp, regexpr("Impact Type", smp)+nchar("Impact Type"), regexpr("Complexity", smp)-1)
a5 <- substr(smp, regexpr("Complexity", smp)+nchar("Complexity"), regexpr("Cost", smp)-1)
a6 <- substr(smp, regexpr("Cost", smp)+nchar("Cost"), regexpr("Comparability", smp)-1)
a7 <- substr(smp, regexpr("Comparability", smp)+nchar("Comparability"), regexpr("DEVELOPER:", smp)-1)
a8 <- substr(smp, regexpr("DEVELOPER:", smp)+nchar("DEVELOPER:"), regexpr("Extractive Company Use:", smp)-1)
a9 <- substr(smp, regexpr("Extractive Company Use:", smp)+nchar("Extractive Company Use:"), regexpr("Data Inputs Required:", smp)-1)
a10 <- substr(smp, regexpr("Data Inputs Required:", smp)+nchar("Data Inputs Required:"), regexpr("http", smp)-1)
temp <- data.table(a1=a1,a2=a2, a3=a3,a4=a4,a5=a5,a6=a6,a7=a7,a8=a8,a9=a9,a10=a10)
df <- rbind(df, temp)
}
View(df)
i<-3
smp <- z[[1]][i]
a1 <- substr(smp, 1, regexpr("Level of Analysis", smp)-1)
a2 <- substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
a3 <- substr(smp, regexpr("Projection/Actual", smp)+nchar("Projection/Actual"), regexpr("Impact Type", smp)-1)
cat(smp)
substr(smp, regexpr("Projection/Actual", smp)+nchar("Projection/Actual"), regexpr("Impact Type", smp)-1)
df <- data.table(number=NA,a1=NA,a2=NA, a3=NA,a4=NA,a5=NA,a6=NA,a7=NA,a8=NA,a9=NA,a10=NA)
for(i in 1:length(z[[1]])) {
smp <- z[[1]][i]
a1 <- substr(smp, 1, regexpr("Level of Analysis", smp)-1)
a2 <- substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
a3 <- substr(smp, regexpr("Projection/Actual", smp)+nchar("Projection/Actual"), regexpr("Impact Type", smp)-1)
a4 <- substr(smp, regexpr("Impact Type", smp)+nchar("Impact Type"), regexpr("Complexity", smp)-1)
a5 <- substr(smp, regexpr("Complexity", smp)+nchar("Complexity"), regexpr("Cost", smp)-1)
a6 <- substr(smp, regexpr("Cost", smp)+nchar("Cost"), regexpr("Comparability", smp)-1)
a7 <- substr(smp, regexpr("Comparability", smp)+nchar("Comparability"), regexpr("DEVELOPER:", smp)-1)
a8 <- substr(smp, regexpr("DEVELOPER:", smp)+nchar("DEVELOPER:"), regexpr("Extractive Company Use:", smp)-1)
a9 <- substr(smp, regexpr("Extractive Company Use:", smp)+nchar("Extractive Company Use:"), regexpr("Data Inputs Required:", smp)-1)
a10 <- substr(smp, regexpr("Data Inputs Required:", smp)+nchar("Data Inputs Required:"), regexpr("http", smp)-1)
temp <- data.table(number=i,a1=a1,a2=a2, a3=a3,a4=a4,a5=a5,a6=a6,a7=a7,a8=a8,a9=a9,a10=a10)
df <- rbind(df, temp)
}
View(df)
i<-2
smp <- z[[1]][i]
a1 <- substr(smp, 1, regexpr("Level of Analysis", smp)-1)
a2 <- substr(smp, regexpr("Level of Analysis", smp)+nchar("Level of Analysis"), regexpr("Projection/Actual", smp)-1)
a3 <- substr(smp, regexpr("Projection/Actual", smp)+nchar("Projection/Actual"), regexpr("Impact Type", smp)-1)
cat(smp)
View(df)
library(readxl); library(data.table)
read_excel(file.choose())
rm(list=ls())
x <- read_excel(file.choose())
View(x)
z <- copy(x)
z[z=="1"] <- "Strategy, Consultation and Institutions"
View(z)
z <- copy(x)
View(z)
z <- x[, x(1,2,3)]
View(z)
z <- x[, c(1,2,3)]
View(z)
z[z=="1"] <- "Strategy, Consultation and Institutions"
View(z)
View(x)
z <- x[, c(1,2,3)]
View(z)
z[z=="1"] <- "Strategy, Consultation and Institutions"
z[z=="2"] <- "Accountability and Transparency"
z[z=="3"] <- "Exploration and License Allocation"
z[z=="4"] <- "Taxation"
z[z=="5"] <- "Local Effects"
z[z=="6"] <- "Nationally Owned Resource Companies"
z[z=="7"] <- "Revenue Distribution"
z[z=="8"] <- "Revenue Volatility"
z[z=="9"] <- "Government Spending"
z[z=="10"] <- "Private Sector Development"
z[z=="11"] <- "Roles of Multinational Companies"
z[z=="12"] <- "Role of International Community"
View(z)
cbind(z, x[,c(4:9)])
w <- cbind(z, x[,c(4:9)])
View(w)
write.csv(w, file.choose())
library(data.table)
rm(list=ls())
x <- fread("https://www.resourcedata.org/dataset/7dd3c8b6-9256-4e34-9360-1519efd87407/resource/e3cf46a7-2bf5-4ee8-a0cb-4b580ee685a4/download/company-payments.csv")
x[, company_name]
write.csv(x[, company_name], file.choose())
x[, unique(company_name)]
merge(
x[, unique(company_name)],
x[, c(company_name, country)],
by='company_name'
)
merge(
data.table(company_name=x[, unique(company_name)]),
x[, c(company_name, country)],
by='company_name'
)
data.table(company_name=x[, unique(company_name)])
x[, c(company_name, country)]
x[, c(company_name, country)]
z <- x[, c(company_name, country)]
x[, c('company_name', 'country')]
merge(
data.table(company_name=x[, unique(company_name)]),
x[, c('company_name', 'country')],
by='company_name'
)
z <- merge(
data.table(company_name=x[, unique(company_name)]),
x[, c('company_name', 'country')],
by='company_name'
)
View(z)
z <- merge(
data.table(company_name=x[, unique(company_name)]),
x[, c('company_name', 'country')],
by='company_name'
)
data.table(company_name=x[, unique(company_name)])
x[, sum(value_reported), by=.(company_name, country)]
x[, sum(value_reported), by=.(company_name, country)][, c(1,2)]
write.csv(x[, sum(value_reported), by=.(company_name, country)][, c(1,2)], file.choose())
write.csv(x[, sum(value_reported), by=.(company_name, country)][, c(1,2)], file.choose())
library(ggplot2)
rm(z)
x[, .N, by=.(company_name, year)]
x[, .N, by=.(company_name, year)][, .N, by=company_name]
x[, .N, by=.(company_name, year)][, .N, by=company_name][N>4]
x[, .N, by=.(company_name, year)][, .N, by=company_name][N>5]
x[, .N, by=.(company_name, year)][, .N, by=company_name][N>4, unique(company_name)]
com <- x[, .N, by=.(company_name, year)][, .N, by=company_name][N>4, unique(company_name)]
x[company_name%in%com]
dat <- x[company_name%in%com]
dat
dat[, sum(value_reported_as_USD), by=.(company_name, country, year)]
dat[, .(amt=sum(value_reported_as_USD)), by=.(company_name, country, year)]
dat <- dat[, .(amt=sum(value_reported_as_USD)), by=.(company_name, country, year)]
dat
dat[order(company_name, year)]
?setorder
setorder(dat, company_name, year)
View(dat)
?shift
dat[, pchange := (amt-shift(amt))/shift(amt), by=.(company_name, country)]
View(dat)
options(scipen=999)
View(dat)
View(dat)
?diff
View(dat)
com <- x[value_reported_as_USD>0, .N, by=.(company_name, year)][, .N, by=company_name][N>4, unique(company_name)]
dat <- x[company_name%in%com]
dat <- dat[, .(amt=sum(value_reported_as_USD)), by=.(company_name, country, year)]
dat[order(company_name, year)]
setorder(dat, company_name, year)
dat[, pchange := (amt-shift(amt))/shift(amt), by=.(company_name, country)]
View(dat)
dat[is.na(amt)]
dat[is.na(pchange)]
dat[is.na(pchange), pchange := 0]
View(dat)
ggplot(dat) +
geom_line(aes(x=year, y=pchange, group=company), alpha=.3) +
theme(legend.position = 'none')
ggplot(dat) +
geom_line(aes(x=year, y=pchange, group=company_name), alpha=.3) +
theme(legend.position = 'none')
ggplot(dat[pchange<1000]) +
geom_line(aes(x=year, y=pchange, group=company_name), alpha=.3) +
theme(legend.position = 'none')
ggplot(dat[pchange<1000]) +
geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.3) +
theme(legend.position = 'none')
warnings()
?geom_smooth
ggplot(dat[pchange<1000]) +
geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.3, se=FALSE) +
theme(legend.position = 'none')
ggplot(dat[pchange<1000]) +
geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.1, se=FALSE) +
theme(legend.position = 'none')
ggplot(dat[pchange<1000]) +
# geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.1, se=FALSE) +
geom_line(aes(x=year, y=pchange, group=company_name), alpha=.1) +
theme(legend.position = 'none')
ggplot(dat[pchange<1000]) +
geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.1, se=FALSE) +
# geom_line(aes(x=year, y=pchange, group=company_name), alpha=.1) +
theme(legend.position = 'none')
ggplot(dat[pchange<1000]) +
geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.1, se=FALSE, color='black') +
# geom_line(aes(x=year, y=pchange, group=company_name), alpha=.1) +
theme(legend.position = 'none')
ggplot(dat[pchange<1000]) +
geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.1, se=FALSE, color='black', size=.1) +
# geom_line(aes(x=year, y=pchange, group=company_name), alpha=.1) +
theme(legend.position = 'none')
ggplot(dat[pchange<100]) +
geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.1, se=FALSE, color='black', size=.1) +
# geom_line(aes(x=year, y=pchange, group=company_name), alpha=.1) +
theme(legend.position = 'none')
ggplot(dat[pchange<50]) +
geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.1, se=FALSE, color='black', size=.1) +
# geom_line(aes(x=year, y=pchange, group=company_name), alpha=.1) +
theme(legend.position = 'none')
ggplot(dat[pchange<50]) +
# geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.1, se=FALSE, color='black', size=.1) +
geom_line(aes(x=year, y=pchange, group=company_name), alpha=.3) +
theme(legend.position = 'none')
ggplot(dat[pchange<10]) +
# geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.1, se=FALSE, color='black', size=.1) +
geom_line(aes(x=year, y=pchange, group=company_name), alpha=.3) +
theme(legend.position = 'none')
ggplot(dat[pchange<10 & pchange>-10]) +
# geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.1, se=FALSE, color='black', size=.1) +
geom_line(aes(x=year, y=pchange, group=company_name), alpha=.3) +
theme(legend.position = 'none')
library(httr)
x <- GET("https://api.opencorporates.com/companies/al/K43128401L")
rm(list=ls())
x <- GET("https://api.opencorporates.com/companies/al/K43128401L")
?content
x <- content(GET("https://api.opencorporates.com/companies/al/K43128401L"), as="text")
library(httr); library(jsonlite)
jsonlite::fromJSON(x)
z <- jsonlite::fromJSON(x)
z$results
z$results$company$name
flatten(x)
library(httr); library(jsonlite); library(rjson)
rjson::fromJSON(x)
z2 <- flatten(x)
z2 <- flatten(x)
z2 <- rjson::fromJSON(x)
data.frame(z)
jsonlite::rm(z2)
rm(z2)
unlist(z)
do.call("rbind", unlist(z))
do.call("rbind", z)
z
unlist)z
unlist(z)
w <- unlist(z)
data.frame(as.list(z))
as.list(z)
gsub("$","", names(w))
names(w) <- gsub("$","", names(w))
w
w <- unlist(z)
w
w <- unlist(z)
names(w) <- gsub("."," ", names(w))
w
names(w)
w <- unlist(z)
names(w) <- gsub(".","-", names(w))
names(w)
w <- unlist(z)
names(w)
gsub("r","-", names(w))
gsub(".","", names(w))
gsub("","", names(w))
str(names(w))
nm <- names(w)
nm
gsub(".","", nm)
gsub("."," ", nm)
gsub("\."," ", nm)
gsub("\\."," ", nm)
w <- unlist(z)
names(w) <- gsub("\\."," ", names(w))
names(w)
as.data.frame(as.list(w))
dt <- as.data.frame(as.list(w))
View(dt)
w <- unlist(z)
names(w)
names(w) <- gsub("\\."," ", names(w))
names(w)
dat <- fread(file.choose())
library(data.table)
dat <- fread(file.choose())
View(dat)
names(dat)
dat$ocAPI
dat <- dat[ocAPI!=""]
dat$ocAPI
library(stringr)
?stringr
strsplit(dat$ocAPI)
strsplit(dat$ocAPI, "http://")
strsplit(dat$ocAPIp[1], "http://")
dat$ocAPIp[1]
dat$ocAPIp[2]
dat$ocAPI
dat$ocAPI[[1]]
strsplit(dat$ocAPIp[[1]], "http://")
strsplit(dat$ocAPIp[[1]], "http://")
dat$ocAPIp[[1]]
dat$ocAPI[[1]]
dat$ocAPI[1]
strsplit(dat$ocAPI[1], "http://")
paste0("http://api.", strsplit(dat$ocAPI[1], "http://"))
gsub("http://", "http://api.", dat$ocAPI[1])
dat[, api:=gsub("http://", "http://api.", ocAPI)]
View(dat)
x <- content(GET("https://api.opencorporates.com/companies/al/K43128401L"), as="text")
z <- jsonlite::fromJSON(x)
z
z$results$company$jurisdiction_code
rm(x,y,z,w)
rm(nm)
rm(dt)
i<-1
z <- jsonlite::fromJSON(content(GET(dat[i]$ocAPI), as="text"))
GET(dat[i]$ocAPI)
content(GET(dat[i]$ocAPI), as="text")
jsonlite::fromJSON(content(GET(dat[i]$ocAPI), as="text"))
z <- content(GET(dat[i]$ocAPI), as="text")
fromJSON(z)
z <- content(GET(dat[i]$api), as="text")
z <- jsonlite::fromJSON(content(GET(dat[i]$api), as="text"))
dat[i]$api
rm(i)
for(i in 1:2){
z <- jsonlite::fromJSON(content(GET(dat[i]$api), as="text"))
dat[i, ocCountry:=z$results$company$jurisdiction_code]
dat[i, occompany_type:=z$results$company$company_type]
}
View(dat)
for(i in 1:nrow(dat)){
z <- jsonlite::fromJSON(content(GET(dat[i]$api), as="text"))
dat[i, ocCountry:=z$results$company$jurisdiction_code]
dat[i, occompany_type:=z$results$company$company_type]
}
for(i in 1:nrow(dat)){
print(i)
z <- jsonlite::fromJSON(content(GET(dat[i]$api), as="text"))
dat[i, ocCountry:=z$results$company$jurisdiction_code]
dat[i, occompany_type:=z$results$company$company_type]
}
z$results$company$jurisdiction_code
z$results$company$company_type
dat[i, occompany_type:=z$results$company$company_type]
for(i in 1:nrow(dat)){
print(i)
z <- jsonlite::fromJSON(content(GET(dat[i]$api), as="text"))
dat[i, ocCountry:=z$results$company$jurisdiction_code]
if(is.null(z$results$company$company_type)){
dat[i, occompany_type:=NA]
} else {
dat[i, occompany_type:=z$results$company$company_type]
}
}
for(i in 1:nrow(dat)){
print(i)
z <- jsonlite::fromJSON(content(GET(dat[i]$api), as="text"))
# dat[i, ocCountry:=z$results$company$jurisdiction_code]
if(is.null(z$results$company$jurisdiction_code)){
dat[i, ocCountry:=NA]
} else {
dat[i, ocCountry:=z$results$company$company_type]
}
#------------------------
if(is.null(z$results$company$company_type)){
dat[i, occompany_type:=NA]
} else {
dat[i, occompany_type:=z$results$company$company_type]
}
}
View(dat)
z <- jsonlite::fromJSON(content(GET(dat[i]$api), as="text"))
z$error
library(ggplot2)
dat[, .N, by=country]
dat[, .N, by=country][order(N)]
dat[, .N, by=country][order(N)]
dat[, .N, by=country][order(N)]
dat[, .N, by=country][order(N)]
dat[, .N, by=country][order(N)]
library(tabulizer)
x <- extract_tables("http://tools.morningstar.co.uk/tsweu6nqxu/globaldocuments/document/documentHandler.ashx?DocumentId=128629304", pages=2)
rm(i,z)
x
?extract_tables
x2 <- extract_tables("http://tools.morningstar.co.uk/tsweu6nqxu/globaldocuments/document/documentHandler.ashx?DocumentId=128629304", pages=2, method='data.frame')
x2
View(x[[1]])
rm(list=les())
rm(list=ls())
library(shiny)
library(tabulizer)
library(data.table)
library(rhandsontable)
library(shinyjs)
library(shinythemes)
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper/generic-scraper')
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper/generic-scraper')
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper/generic-scraper')
?renderRHandsontable
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper/generic-scraper')
?fileInput
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper/generic-scraper')
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper/generic-scraper')
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper/generic-scraper')
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper/generic-scraper')
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper/generic-scraper')
?downloadHandler
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper/generic-scraper')
