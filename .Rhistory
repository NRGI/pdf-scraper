# geom_smooth(aes(x=year, y=pchange, group=company_name), alpha=.1, se=FALSE, color='black', size=.1) +
geom_line(aes(x=year, y=pchange, group=company_name), alpha=.3) +
theme(legend.position = 'none')
dat <- fread(file.choose())
library(data.table)
dat <- fread(file.choose())
View(dat)
rm(list=ls())
dat <- fread(file.choose())
dat$ocAPI
dat$ocAPI[1]
dat$ocAPI[50]
dat <- dat[ocAPI!=""]
dat$ocAPI[50]
gsub("http://opencorporates.com/companies/", "", dat$ocAPI[50])
gsub("http://opencorporates.com/companies/", "", dat$ocAPI[50])
sub("\\\\.*", "", gsub("http://opencorporates.com/companies/", "", dat$ocAPI[50]))
sub("\\/.*", "", gsub("http://opencorporates.com/companies/", "", dat$ocAPI[50]))
sub("\\/.*", "", gsub("http://opencorporates.com/companies/", "", dat$ocAPI[5]))
dat[, ocCountry:=sub("\\/.*", "", gsub("http://opencorporates.com/companies/", "", ocAPI))]
View(dat)
dat[,.N, by=ocCountry]
dat[,.N, by=ocCountry][order(N)]
write.csv(dat, file.choose())
dat <- fread(file.choose())
dat <- fread(file.choose())
dat[, ocCountry:=sub("\\/.*", "", gsub("http://opencorporates.com/companies/", "", ocAPI))]
View(dat)
write.csv(dat, file.choose())
dat[,.N, by=.(ocCountry,Country)][order(N)]
View(dat)
dat[,.N, by=.(ocCountry,country)][order(N)]
View(dat[,.N, by=.(ocCountry,country)][order(N)])
View(dat[,.N, by=.(ocCountry,country)][order(N)][ocCountry!=""])
rm(list=ls())
library(data.table)
x <- fread(file.choose())
View(x)
library(data.table); library(ggplot2)
x[, .N, by=.(ocCountry, country)]
unique(x$ocCountry)
x[, .N, by=.(ocCountry, country)][order(N)]
x[, .N, by=.(ocCountry, country)][order(N)][ocCountry!=""]
View(x[, .N, by=.(ocCountry, country)][order(N)][ocCountry!=""])
shiny::runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
?renderText
?textOutput
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
?img
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
?fluidPage
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
shiny::runGitHub("rhandsontable", "jrowen",
subdir = "inst/examples/rhandsontable_datafile")
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
runApp('GitHub/shiny-apps-deploy/apps/useEcosystem')
rm(list=ls())
runApp('GitHub/shiny-apps-deploy/apps/useEcosystem')
runApp('GitHub/shiny-apps-deploy/apps/portalEcosystem')
runApp('GitHub/shiny-apps-deploy/apps/useEcosystem')
library(data.table)
rm(list=ls())
x <- fread(file.choose())
names(x)
unique(x$reportingCompany)
unique(x$reportingCompany)
names(x)
x[, sum(projectPayment)]
x[, sum(as.numeric(projectPayment))]
x[, sum(as.numeric(projectPayment), na.rm=T)]
shiny::runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
library(googlesheets)
source_key <- gs_key(x="1GWAJXWqwhPgilmV0BbmDTZZM13rMqRQrNbpx-LapoOk")
?renderDataTable
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
dat <- gs_read(source_key, ws=1)
rm(x)
View(dat)
names(dat)
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
?selectInput
?callModule
library(shiny)
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
unique(data$dat$reportingCountry)
unique(dat$reportingCountry)
order(unique(dat$reportingCountry))
sort(unique(dat$reportingCountry))
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
?reactive
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
?sidebarPanel
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
str(dat)
names(dat)
names(dat)\
names(dat)
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
names(dat)
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
shiny::runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
library(shiny)
library(data.table)
library(DT)
library(googlesheets)
library(shinyjs)
library(shinyBS)
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
?renderDataTable
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
library(readxl); library(data.table)
x <- read_excel(file.choose())
x <- read.csv(file.choose())
View(x)
z <- copy(x)
View(z)
x <- read_excel(file.choose())
View(x)
z <- x[, c(1,2,3)]
View(z)
z[z=="1"] <- "Precept 1: Strategy, Consultation and Institutions"
z[z=="2"] <- "Precept 2:Accountability and Transparency"
z[z=="3"] <- "Precept 3:Exploration and License Allocation"
z[z=="4"] <- "Precept 4:Taxation"
z[z=="5"] <- "Precept 5:Local Effects"
z[z=="6"] <- "Precept 6:Nationally Owned Resource Companies"
z[z=="7"] <- "Precept 7:Revenue Distribution"
z[z=="8"] <- "Precept 8:Revenue Volatility"
z[z=="9"] <- "Precept 9:Government Spending"
z[z=="10"] <- "Precept 10:Private Sector Development"
z[z=="11"] <- "Precept 11:Roles of Multinational Companies"
z[z=="12"] <- "Precept 12:Role of International Community"
View(z)
w <- cbind(z, x[,c(4:9)])
write.csv(w, file.choose())
c1<- c(1:10)
c2<- c(11:20)
df<- data.frame(c1,c2)
library(data.table)
setDT(df)
df[, c3 := c2-c1]
df
?shift
rm(c1,c2,c3,df)
shiny::runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
?renderDataTable
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
c("All", sort(unique(dat$reportingCountry)))
dat[, .N, by=reportingCountry]
library(data.table)
dat[, .N, by=reportingCountry]
str(dat)
class(dat)
setDT(dat)
dat[, .N, by=reportingCountry]
dat[, .N, by=reportingCountry][order(reportingCountry)]
paste(c("All", sort(unique(temp$reportingCountry))), dat[, .N, by=reportingCountry][order(reportingCountry)]$N)
paste(c("All", sort(unique(dat$reportingCountry))), dat[, .N, by=reportingCountry][order(reportingCountry)]$N)
paste(c("All", sort(unique(dat$reportingCountry))), c(nrow(dat), dat[, .N, by=reportingCountry][order(reportingCountry)]$N)
)
paste0(c("All", sort(unique(dat$reportingCountry))), " (", c(nrow(dat), dat[, .N, by=reportingCountry][order(reportingCountry)]$N),")")
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
dat <- fread("https://www.resourcedata.org/dataset/7dd3c8b6-9256-4e34-9360-1519efd87407/resource/bba3b646-131b-47c5-9f4c-37019f896575/download/company-payments.csv")
str(dat)
substr(dat$created, 0, 10)
dat[, created:=substr(created, 0, 10)]
dat[, created:=as.Date(substr(created, 0, 10))]
str(dat)
dat[, changed:=as.Date(substr(changed, 0, 10))]
str(dat)
library(ggplot2)
unique(dat$created)
max(dat$created)
ggplot(dat[, .N, by=created]) +
geom_bar(aes(x=created, y=N), stat='identity')
ggplot(dat[, .N, by=changed]) +
geom_bar(aes(x=changed, y=N), stat='identity')
shiny::runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
library(data.table)
library(ggplot2)
ggplot(dat[, .N, by=created]) +
geom_bar(aes(x=created, y=N), stat='identity')
unique(dat$created)
order(unique(dat$created))
unique(dat$created)[order(unique(dat$created))]
runApp('C:/Users/tmorrison/Box/TRM/NRGI tmo/ResourceProjects/Data source scraping/Sourcelist app/sourcelist-app')
library(data.table); library()
library(data.table); library(httr)
library(googlesheets)
dat <- gs_read("1l9us32bfjHmULcuBjYZrYoyX_m-I8V0Emn5R4kmRarc")
dat <- gs_sheet("1l9us32bfjHmULcuBjYZrYoyX_m-I8V0Emn5R4kmRarc")
library(googlesheets)
key <- gs_key("1l9us32bfjHmULcuBjYZrYoyX_m-I8V0Emn5R4kmRarc")
dat <-  gs_read(key)
setDT(dat)
dat[reportingCountry=="Canada"]
url1 <- "https://www.tmxmoney.com/TMX/HttpController?GetPage=SearchEquitiesViewPage&Page=1&SearchIsMarket=No&Language=en&SearchKeyword="
url2 <- "&SearchCriteria=Name&SearchType=Contain"
companies <- dat[reportingCountry=="Canada"]$reportingCompany
comp <- dat[reportingCountry=="Canada"]$reportingCompany
rm(source_key)
rm(companies)
comp[1]
comp[5]
strsplit(comp[5], " ")
paste0(strsplit(comp[5], " "), collapse="+")
paste0(strsplit(comp[5], " "), sep="+")
strsplit(comp[5], " ")
?strsplit
base::strsplit(comp[5], " ")
paste0(unlist(strsplit(comp[5], " ")), sep="+")
paste0(unlist(strsplit(comp[5], " ")), collapse="+")
tcomp <- paste0(unlist(strsplit(comp[5], " ")), collapse="+")
paste0(url1, tcomp, url2)
turl <- paste0(url1, tcomp, url2)
library(xml2)
pg <- read_html(turl)
pg
str(pg)
library(rvest)
xml2::
rvest::html_table(pg)
rvest::html_node(pg, xpath="//*[@id="symbolLookup"]/div/table/tbody/tr[2]")
rvest::html_node(pg, xpath='//*[@id="symbolLookup"]/div/table/tbody/tr[2]')
tbl <- html_node(pg, xpath='//*[@id="symbolLookup"]/div/table/tbody/tr[2]')
html_attr(tbl)
?html_attr
tbl$node
tbl
tbl[1]
tbl[2]
tbl[[1]]
?html_nodes()
?html_attr
html_attr(tbl, 'td')
html_attrs(tbl)
class(tbl)
html_text(tbl)
xml2::
html_table(pg)
xml2::
tbl <- html_table(pg)
tbl[[2]]
tbl[[2]]$`Company Name`
tbl[[2]]$`Exchange*`
tbl[[2]]$`Company Name`[2]
tbl[[2]]$`Company Name`[2]
tbl[[2]]$Symbol[2]
tbl[[2]]$`Exchange*`[2]
texchange <- tbl[[2]]$`Exchange*`[2]
symbols <- data.table('Source Name'=NA, 'Lookup Name'=NA, 'Symbol'=NA, 'Exchange'=NA)
symbols
data.table('Source Name'=comp[5],
'Lookup Name'=tbl[[2]]$`Company Name`[2],
'Symbol'=tbl[[2]]$Symbol[2],
'Exchange'=tbl[[2]]$`Exchange*`[2])
rbind(symbols,
data.table('Source Name'=comp[5],
'Lookup Name'=tbl[[2]]$`Company Name`[2],
'Symbol'=tbl[[2]]$Symbol[2],
'Exchange'=tbl[[2]]$`Exchange*`[2])
)
for(i in 1:10){
tcomp <- paste0(unlist(strsplit(comp[i], " ")), collapse="+")
turl <- paste0(url1, tcomp, url2)
#2. Download webpage
pg <- read_html(turl)
xml2::
tbl <- html_table(pg)
# tname <- tbl[[2]]$`Company Name`[2]
# tsymbol <- tbl[[2]]$Symbol[2]
# texchange <- tbl[[2]]$`Exchange*`[2]
symbols <- rbind(symbols,
data.table('Source Name'=comp[i],
'Lookup Name'=tbl[[2]]$`Company Name`[2],
'Symbol'=tbl[[2]]$Symbol[2],
'Exchange'=tbl[[2]]$`Exchange*`[2])
)
}
for(i in 1:10){
print("hello")
tcomp <- paste0(unlist(strsplit(comp[i], " ")), collapse="+")
turl <- paste0(url1, tcomp, url2)
#2. Download webpage
pg <- read_html(turl)
xml2::
tbl <- html_table(pg)
# tname <- tbl[[2]]$`Company Name`[2]
# tsymbol <- tbl[[2]]$Symbol[2]
# texchange <- tbl[[2]]$`Exchange*`[2]
symbols <- rbind(symbols,
data.table('Source Name'=comp[i],
'Lookup Name'=tbl[[2]]$`Company Name`[2],
'Symbol'=tbl[[2]]$Symbol[2],
'Exchange'=tbl[[2]]$`Exchange*`[2])
)
}
for(i in 1:10){
print("hello")
tcomp <- paste0(unlist(strsplit(comp[i], " ")), collapse="+")
turl <- paste0(url1, tcomp, url2)
#2. Download webpage
pg <- read_html(turl)
xml2::
tbl <- html_table(pg)
# tname <- tbl[[2]]$`Company Name`[2]
# tsymbol <- tbl[[2]]$Symbol[2]
# texchange <- tbl[[2]]$`Exchange*`[2]
symbols <- rbind(symbols,
data.table('Source Name'=comp[i],
'Lookup Name'=tbl[[2]]$`Company Name`[2],
'Symbol'=tbl[[2]]$Symbol[2],
'Exchange'=tbl[[2]]$`Exchange*`[2])
)
}
symbols <- data.table('Source Name'=NA, 'Lookup Name'=NA, 'Symbol'=NA, 'Exchange'=NA)
for(i in 1:10){
print("hello")
tcomp <- paste0(unlist(strsplit(comp[i], " ")), collapse="+")
turl <- paste0(url1, tcomp, url2)
#2. Download webpage
pg <- read_html(turl)
tbl <- html_table(pg)
# tname <- tbl[[2]]$`Company Name`[2]
# tsymbol <- tbl[[2]]$Symbol[2]
# texchange <- tbl[[2]]$`Exchange*`[2]
symbols <- rbind(symbols,
data.table('Source Name'=comp[i],
'Lookup Name'=tbl[[2]]$`Company Name`[2],
'Symbol'=tbl[[2]]$Symbol[2],
'Exchange'=tbl[[2]]$`Exchange*`[2])
)
}
View(symbols)
symbols <- data.table('Source Name'=NA, 'Lookup Name'=NA, 'Symbol'=NA, 'Exchange'=NA)
for(i in 1:length(comp)){
print(i)
tcomp <- paste0(unlist(strsplit(comp[i], " ")), collapse="+")
turl <- paste0(url1, tcomp, url2)
#2. Download webpage
pg <- read_html(turl)
tbl <- html_table(pg)
# tname <- tbl[[2]]$`Company Name`[2]
# tsymbol <- tbl[[2]]$Symbol[2]
# texchange <- tbl[[2]]$`Exchange*`[2]
symbols <- rbind(symbols,
data.table('Source Name'=comp[i],
'Lookup Name'=tbl[[2]]$`Company Name`[2],
'Symbol'=tbl[[2]]$Symbol[2],
'Exchange'=tbl[[2]]$`Exchange*`[2])
)
}
View(symbols)
write.csv(symbols, file.choose())
symbols[is.na(symbols)]
symbols[is.na(symbols)] <- ""
write.csv(symbols, file.choose())
write.csv(symbols, file.choose())
symbols[,.N,by=Exchange]
View(symbols)
comp <- unique(dat[reportingCountry=="Canada"]$reportingCompany)
symbols <- data.table('Source Name'=NA, 'Lookup Name'=NA, 'Symbol'=NA, 'Exchange'=NA)
for(i in 1:length(comp)){
print(i)
tcomp <- paste0(unlist(strsplit(comp[i], " ")), collapse="+")
turl <- paste0(url1, tcomp, url2)
#2. Download webpage
pg <- read_html(turl)
tbl <- html_table(pg)
# tname <- tbl[[2]]$`Company Name`[2]
# tsymbol <- tbl[[2]]$Symbol[2]
# texchange <- tbl[[2]]$`Exchange*`[2]
symbols <- rbind(symbols,
data.table('Source Name'=comp[i],
'Lookup Name'=tbl[[2]]$`Company Name`[2],
'Symbol'=tbl[[2]]$Symbol[2],
'Exchange'=tbl[[2]]$`Exchange*`[2])
)
}
View(symbols)
View(dat)
unique(dat[reportingCountry=="Canada"]$reportingCompany)
unique(dat[reportingCountry=="United Kingdom"]$reportingCompany)
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
?p
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
?imageOutput
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
runApp('GitHub/ptg-scraper')
runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
shiny::runApp('GitHub/shiny-apps-deploy/apps/generic-scraper')
shiny::runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
?a\
?a
runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
?tags
runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
?extendShinyjs
runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
`install.packages("V8")`
install.packages("V8")
runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
?shinyjs::runjs
runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
letters
letters%in%"1"
runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
strsplit(input$pageNumber),"")
strsplit("ggg"),"")
strsplit("ggg","")
runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
any(c(letters,LETTERS)%in%strsplit("h",""))
any(c(letters,LETTERS)%in%strsplit("hhh",""))
any(strsplit("hhh","")%in%c(letters,LETTERS))
letters %in% "c"
letters %in% c("c","g")
any(letters %in% c("c","g"))
any(c(letters,LETTERS)%in%strsplit(input$pageNumber,""))
any(c(letters,LETTERS)%in%strsplit("h",""))
any(c(letters,LETTERS)%in%strsplit("hh",""))
letters%in%strsplit("hh","")
strsplit("hh","")
strsplit("hh","")[1]
letters%in%strsplit("hh","")[1]
letters%in%strsplit("hh","")[[1]]
strsplit("hh","")[[1]]
strsplit("hh","")[[1]]%in%letters
runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
grepl("[0-9]", "a")
grepl("[0-9]", "1")
grepl("\-", "1")
grepl("\\-", "1")
grepl("\\-", "-")
grepl("\\-,", "-")
grepl("\\-,", ",")
grepl("\\-,\\,", ",")
grepl("\\-,\,", ",")
grepl("\\,", ",")
grepl("\\.", ".")
grepl("\\*", "*")
runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
grepl('\\"', input$pageNumber)
grepl('\\"', '"')
runApp('GitHub/shiny-apps-deploy/apps/pdf-scraper')
shiny::runApp()
?tags
?tags$script
??tags$script
runApp()
'
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag("js", new Date());
gtag("config", ',Sys.getenv("GA_TRACKING_ID"),');
var dimension = [0, 0];
$(document).on("shiny:connected", function(e) {
dimension[0] = window.innerWidth;
dimension[1] = window.innerHeight;
$("label").remove();
Shiny.onInputChange("dimension", dimension);
});
$(window).resize(function(e) {
dimension[0] = window.innerWidth;
dimension[1] = window.innerHeight;
Shiny.onInputChange("dimension", dimension);
});
'
paste0('
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag("js", new Date());
gtag("config", ',Sys.getenv("GA_TRACKING_ID"),');
var dimension = [0, 0];
$(document).on("shiny:connected", function(e) {
dimension[0] = window.innerWidth;
dimension[1] = window.innerHeight;
$("label").remove();
Shiny.onInputChange("dimension", dimension);
});
$(window).resize(function(e) {
dimension[0] = window.innerWidth;
dimension[1] = window.innerHeight;
Shiny.onInputChange("dimension", dimension);
});
')
;kug
'
paste0('
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag("js", new Date());
gtag("config", ',Sys.getenv("GA_TRACKING_ID"),');
var dimension = [0, 0];
$(document).on("shiny:connected", function(e) {
dimension[0] = window.innerWidth;
dimension[1] = window.innerHeight;
$("label").remove();
Shiny.onInputChange("dimension", dimension);
});
$(window).resize(function(e) {
dimension[0] = window.innerWidth;
dimension[1] = window.innerHeight;
Shiny.onInputChange("dimension", dimension);
});
')
runApp()
runApp()
runApp()
runApp()
